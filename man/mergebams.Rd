% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mergebamsR.R
\name{mergebams}
\alias{mergebams}
\title{#' Merge BAM Files using Rust Backend}
\usage{
mergebams(bams, out_path, names = NULL, prefixes = NULL)
}
\arguments{
\item{bams}{A character vector containing the file paths to the BAM files to be merged.}

\item{out_path}{A single character string specifying the output path for the merged BAM file.}

\item{names}{A list where each element is a character vector of read names associated with each BAM file. If a BAM file does not have associated read names, its corresponding list element should be NULL.}

\item{prefixes}{A character vector of prefixes to be applied. Each prefix corresponds to a BAM file in the \code{bams} vector.}
}
\description{
This function is a Rust-based front-end for merging BAM files.
}
\details{
The function takes in vectors of file paths to BAM files, a single output path for the merged BAM file,
a list of read names, and a vector of prefixes to be applied. It then performs the merge operation using
the Rust backend.

This function expects the \code{bams}, \code{out_path}, and \code{prefixes} parameters to be non-null and properly formatted.
The \code{names} parameter is a list that can contain NULL values for BAM files without associated read names. Each
non-NULL element in \code{names} should be a character vector of read names.

Error handling is implemented to ensure that the input parameters are of the correct type and format. If an
error is detected, the function prints an error message to the standard error and returns early without performing
the merge operation.
}
\keyword{internal}
